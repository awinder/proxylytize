events {
    worker_connections 1024;
}

http {  
  lua_package_path "/usr/local/lib/lua/?.lua;;";
  
  {{range $index, $service := services}}{{range $tag, $services := service $service.Name | byTag}}{{if eq "http" $tag}}
    upstream {{$service.Name}} {
      least_conn;
      {{range $services}}server {{.Address}}:{{.Port}} max_fails=3 fail_timeout=60 weight=1;
      {{end}}
    }

    server {
      listen 		80;
      server_name 	{{$service.Name}}.*;
      client_max_body_size 	0;
	
      location / {
  	    proxy_pass 		http://{{$service.Name}};
  	    proxy_redirect	http://{{$service.Name}}/ /;
  	    proxy_set_header 	X-Forwarded-Host	$host;
  	    proxy_set_header 	X-Forwarded-For 	$proxy_add_x_forwarded_for;
  	    proxy_set_header 	Host 			$host;
  	    proxy_set_header 	X-Real-IP 		$remote_addr;
      }
    }
  {{end}}{{end}}{{end}}

  server {
    resolver $RESOLVER;
    
    listen 80 default_server;

    location /services {
      content_by_lua_file scripts/services.lua;
    }
    
    location /scripts {
      try_files $uri =404;
    }
    
    location / {
        index index.html;
    }
    
    location /health {
        default_type 'text/plain';

        content_by_lua '
            ngx.say("OK")
        ';
    }
  }
}